# Create a folder to save figures
dir.create("/Figures", recursive = TRUE)
d=3
# Folder for d dimension test scenario
folder <- paste("Example_Data/",d,"D/Kriging",sep="")
dir.create(folder, recursive = TRUE)
# Folder for d dimension test scenario
folder <- paste("/Example_Data/",d,"D/Kriging",sep="")
dir.create(folder, recursive = TRUE)
rm(list = ls())
graphics.off()
# Set a working directory, please set it to your own working folder when testing
dir <- "/storage/work/h/hxy46/Sensitivity"
setwd(dir = dir)
# Folder for d dimension test scenario
folder <- paste("/Example_Data/",d,"D/Kriging",sep="")
d=3
dir.create(folder, recursive = TRUE)
# A while loop includes the stopping criterion
while (1>0){
# Begin with the base sample size (also sampled by LHS)
X_GP <- randomLHS(Kriging_size,d)
# Evaluate the model to get their true outputs
Y_GP <- apply(X_GP,1,Reliability)
# Record the Kriging model evaluation time
start.time <- Sys.time()
GPmodel <- GP_fit(X_GP,Y_GP)
end.time <- Sys.time()
# Emulator convergence check
# First get the standard error of all the training samples
a <- predict(GPmodel,x_test)
std <- sqrt(a$MSE)
# If all the standard errors are less than or equal to 1, then convergence is reached, else add sample size
if (max(std)<=1){
break
} else {
Kriging_size <- Kriging_size + d
}
}
# Folder for d dimension test scenario
folder <- paste("/Example_Data/",d,"D/Kriging",sep="")
dir.create(folder, recursive = TRUE)
# Folder for d dimension test scenario
folder <- paste("Example_Data/",d,"D/Kriging",sep="")
dir.create(folder, recursive = TRUE)
